**In this exercise we will create one more container using same project
**Later we see how to access container2 inside container1

**Phase 1: we will first create a new container with extra content

1.1 Use HANA CLI to create a new user_db folder as new DB module
hana-cli createModule -f user_db
1.2  inside this folder, create usertable.cds under user_db

using {cuid} from '@sap/cds/common';

namespace![UserData];

entity![User] : cuid {
    ![FirstName] : String(40);
    ![LastName]  : String(40);
    ![Email]     : String(255);
}

annotate![User] with @(
    title       : '{i18n>userService}',
    description : '{i18n>userService}'
) {
    ID          @(
        title       : '{i18n>user_id}',
        description : '{i18n>user_id}',
    );
    ![FirstName]@title : '{i18n>fname}';
    ![LastName] @title : '{i18n>lname}';
    ![Email]    @title : '{i18n>email}'  @assert.format : '[\\w|-]+@\\w[\\w|-]*\\.[a-z]{2,3}';
};

1.3 we go to terminal and use the cd user_db > npm install
1.4 We go to package.json @ projet level and add this to build configuration

"build": {
            "target": "./gen",
            "tasks": [
                {"for":"hana", "src":"db", "options":{"model":["db","srv","app"]}},
                {"for":"node-cf", "src":"srv", "options":{"model":["db","srv","app"]}},
                {"for":"hana", "src":"user_db", "options":{"model":["user_db"]}}
            ]
        },

1.5 Now we create a new resource of type hdi container to create a new hdi container

resources:
  - name: pocapapp-user-db
    type: com.sap.xs.hdi-container
    parameters:
      service: hana
      service-plan: hdi-shared
    properties:
      user-service-name: '${service-name}' 

1.6 We add a db module in MTA filer which will use this resource as require and represent our new 
    db module      
    NOTE - always change the build path for new db module to gen/user_db

  - name: pocapapp-user-db-deployer
    type: hdb
    path: gen/user_db
    requires:
      - name: pocapapp-user-db
    parameters:
      buildpack: nodejs_buildpack

1.7 Now we goto project level and perform build and deployer
cds build --production && cds deploy --to hana

1.8 You can test the new container for user-db, it should have the table

1.9 Download the zip file where anubhav created some more db content for new container
Make sure you extract zip to local computer
https://github.com/soyuztechnologies/test_XSACAPM/blob/master/resource/user_db_src.zip
drag all folders inside user_db>src folder
cds build --production && cds deploy --to hana

1.10 A procedure initUser gets created in new container
call the procedure and generate dummy records


**Phase 2: Perform cross container access

2.1 Go to main app level default-env.json and copy user-db service details to db>default-env.json
DO NOT REPLACE just add

{
        "name": "pocapapp-user-db",
        "tags": [
          "hana"
        ],
        "credentials": {
          "certificate": "-----BEGIN CERTIFICATE-----\nMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\nQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\nCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\nnh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\nT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\ngdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\nBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\nTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\nDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\nhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\nPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\nYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\nCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n-----END CERTIFICATE-----",
          "driver": "com.sap.db.jdbc.Driver",
          "hdi_password": "Ws7e8pME8mtsvuY4CstW0CqWRTrJbwnPV4hCjYURmWF7CH_zrS3EdPrQ2fZe7kJmzl7o08kuZxFJOc1-AlP2eQ7YK9w4W4anBPbMC9dlGF4yY-IFpL5pNtmZW7bDQQMi",
          "hdi_user": "HANA_USER_AYTMP04D1DQSR14RIREECVBFQ_DT",
          "host": "73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com",
          "password": "Jm6UclwH8q44OxO42OkA3rMpcN5qSc6Hb7SVS4gwATXYIvwPecaFFmDJOOv0o2eeCQ.KLnoXTb_QNMsJuZ-9F7CvEL8dx4QeE3bbkx5YGEQG.9CPpSmaRHb1MJnSHg24",
          "port": "443",
          "schema": "HANA_USER",
          "url": "jdbc:sap://73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com:443?encrypt=true&validateCertificate=true&currentschema=HANA_USER",
          "user": "HANA_USER_AYTMP04D1DQSR14RIREECVBFQ_RT"
        }
      }

2.2 In order the BAS to know which container to deploy db content we need to make first container 
work as default

"TARGET_CONTAINER": "pocapapp-db",

2.3 Now we maintain service replacement for user db service
add new entry
,{
		"key": "hdi-user-service",
		"service": "pocapapp-user-db"
	}

2.4 go to db>cfg, and create .hdbfgrants which will grant the user role of other container
to current container design time and runtime users
Since its a cross container, we also need to create synonymconfig

2.4.1 user.hdbgrants file under db>cfg

{
    "hdi-user-service": {
      "object_owner": {
        "container_roles":["user#"]
      },
      "application_user": {
        "container_roles":["user"]
      }
    } 
 }

 2.4.2 and user.hdbsynonymconfig

 {
    "USERDATA_USER_LOCAL": {
      "target": {
        "object": "USERDATA_USER",
        "grantor": "hdi-user-service"
      }
    },
    "USER_DETAILS": {
      "target": {
        "object": "user.models::USER_DETAILS",
        "grantor": "hdi-user-service"      
      }
    }
  }

2.5 We finally create synonum pointing to synonymconfig

user.hdbsynonym

{
    "USERDATA_USER_LOCAL": {
      "target": {
        "object": "USERDATA_USER"
      }
    },
    "USER_DETAILS": {
      "target": {
        "object": "user.models::USER_DETAILS"
      }
    }
  }

2.6 go to db folder in terminal

npm start

2.7 Testing of our synonym which access cross container views and table





This is how complete file in db will look like

{
    "TARGET_CONTAINER": "pocapapp-db",
	"SERVICE_REPLACEMENTS": [{
		"key": "ServiceName_1",
		"service": "MY_SFLIGHT_SRV"
	},{
		"key": "hdi-user-service",
		"service": "pocapapp-user-db"
	}],
	"VCAP_SERVICES": {
		"hana": [
            {
			"name": "pocapapp-db",
			"tags": [
				"hana"
			],
			"credentials": {
				"certificate": "-----BEGIN CERTIFICATE-----\nMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\nQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\nCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\nnh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\nT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\ngdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\nBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\nTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\nDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\nhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\nPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\nYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\nCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n-----END CERTIFICATE-----",
				"driver": "com.sap.db.jdbc.Driver",
				"hdi_password": "Qt4N2hHwWRNevV7CnEGtfKogqpneDFoXEwP3je4cjI0el5rNaGaeBo761GU_FskIoXwrgnwDtk9aVRJr62XSSIcFTAVBOufMC4UVTGBBBiV9xjJhoVez4E16bBBnSU2a",
				"hdi_user": "DED5DDDF1D9F43E682C781C51C420B83_4UWW3VVCNP3NCF8ZJKJITJX8I_DT",
				"host": "73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com",
				"password": "Yw0td0tG5H0dZJwDSbgaf2-dMtrFRaID7uG5-M92mTLRe3-XlV6W7DwIckGm._4V8EJiXk7gzqaaWEkrzOXW8a9R7rgq4qOlRNWU7iJpUDCCXpyL4_vKCwgz5U_maU5s",
				"port": "443",
				"schema": "DED5DDDF1D9F43E682C781C51C420B83",
				"url": "jdbc:sap://73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com:443?encrypt=true&validateCertificate=true&currentschema=DED5DDDF1D9F43E682C781C51C420B83",
				"user": "DED5DDDF1D9F43E682C781C51C420B83_4UWW3VVCNP3NCF8ZJKJITJX8I_RT"
			}
		},
        {
            "name": "pocapapp-user-db",
            "tags": [
              "hana"
            ],
            "credentials": {
              "certificate": "-----BEGIN CERTIFICATE-----\nMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\nQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\nMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\nb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\nCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\nnh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\nT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\ngdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\nBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\nTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\nDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\nhMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\nPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\nYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\nCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n-----END CERTIFICATE-----",
              "driver": "com.sap.db.jdbc.Driver",
              "hdi_password": "Ws7e8pME8mtsvuY4CstW0CqWRTrJbwnPV4hCjYURmWF7CH_zrS3EdPrQ2fZe7kJmzl7o08kuZxFJOc1-AlP2eQ7YK9w4W4anBPbMC9dlGF4yY-IFpL5pNtmZW7bDQQMi",
              "hdi_user": "HANA_USER_AYTMP04D1DQSR14RIREECVBFQ_DT",
              "host": "73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com",
              "password": "Jm6UclwH8q44OxO42OkA3rMpcN5qSc6Hb7SVS4gwATXYIvwPecaFFmDJOOv0o2eeCQ.KLnoXTb_QNMsJuZ-9F7CvEL8dx4QeE3bbkx5YGEQG.9CPpSmaRHb1MJnSHg24",
              "port": "443",
              "schema": "HANA_USER",
              "url": "jdbc:sap://73a6bb27-fff4-4938-9584-9777b5bfcc0e.hana.trial-us10.hanacloud.ondemand.com:443?encrypt=true&validateCertificate=true&currentschema=HANA_USER",
              "user": "HANA_USER_AYTMP04D1DQSR14RIREECVBFQ_RT"
            }
          }],
		"user-provided": [{
			"label": "user-provided",
			"name": "MY_SFLIGHT_SRV",
			"tags": [],
			"instance_name": "MY_SFLIGHT_SRV",
			"binding_name": null,
			"credentials": {
				"password": "Welcome1",
				"schema": "SFLIGHT",
				"tags": [
					"hana"
				],
				"user": "CUPS",
				"syslog_drain_url": "",
				"volume_mounts": []
			}
		}]
	}
}