PROCEDURE "get_po_header_data"( 
    out ex_emp_total_orders table(
        LOGINNAME nvarchar(12),
        create_cnt integer,
        change_cnt integer,
        combine_cnt integer,
        name varchar(256)
    )
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/
   --Q1
   ex_po_create_cnt_table = select count(*) as create_cnt, "CREATEDBY" as EID FROM
    ANUBHAV_DB_TRANSACTION_PURCHASEORDER where ID IN (
    SELECT "PARENT_KEY_ID" from ANUBHAV_DB_TRANSACTION_POITEMS
    where "PRODUCT_GUID_NODE_KEY" IS NOT NULL
    ) GROUP BY CREATEDBY;

    --now create implicit variables
    --Q2
    ex_po_change_cnt_table = select count(*) as change_cnt, "MODIFIEDBY" as EID FROM
    ANUBHAV_DB_TRANSACTION_PURCHASEORDER where ID IN (
    SELECT "PARENT_KEY_ID" from ANUBHAV_DB_TRANSACTION_POITEMS
    where "PRODUCT_GUID_NODE_KEY" IS NOT NULL
    ) GROUP BY "MODIFIEDBY";

    --Q3
    ex_emp_total_orders = select emp.loginname, crt.create_cnt, chg.change_cnt,
                          crt.create_cnt + chg.change_cnt as combine_cnt,
                          "get_full_name"(emp."NAMEFIRST",emp."NAMEMIDDLE",emp."NAMELAST") as name
                          from ANUBHAV_DB_MASTER_EMPLOYEES as emp
                          LEFT OUTER JOIN :ex_po_create_cnt_table as crt ON
                          emp.id = crt.EID
                          LEFT OUTER JOIN :ex_po_change_cnt_table as chg ON
                          emp.id = chg.EID
                          order by combine_cnt DESC 
                          limit 5 offset 5;

END